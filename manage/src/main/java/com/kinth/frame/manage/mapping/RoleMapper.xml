<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kinth.frame.manage.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.kinth.frame.manage.domain.Role" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="role_level" property="roleLevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, role_level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_role
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.kinth.frame.manage.domain.Role" >
    insert into sys_role (id, name, role_level
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{roleLevel,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kinth.frame.manage.domain.Role" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="roleLevel != null" >
        role_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null" >
        #{roleLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kinth.frame.manage.domain.Role" >
    update sys_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null" >
        role_level = #{roleLevel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kinth.frame.manage.domain.Role" >
    update sys_role
    set name = #{name,jdbcType=VARCHAR},
      role_level = #{roleLevel,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_role
	</select>

	<select id="selectByPage" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from sys_role
		<where>
			<if test="name != null">
				name like "%"#{name}"%"
			</if>
		</where>
		limit #{startIndex},#{pageSize}
	</select>
	<select id="selcount" resultType="java.lang.Integer"
		parameterType="map">
		select count(*) from sys_role
		<where>
			<if test="name != null">
				name like "%"#{name}"%"
			</if>
		</where>
	</select>
	
	<select id="selectUserRole" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from
    sys_role,
	sys_user_role
WHERE
	sys_role.id = sys_user_role.role_id
AND sys_user_role.user_id = #{userId,jdbcType=VARCHAR}
  </select>
</mapper>